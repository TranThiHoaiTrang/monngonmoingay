//
// mixins
//

@import "flex_mixins";
@import "grid_mixins";

:root {

    --body-color:               #{$body-color};
    --body-bg:                  #{$body-bg};

    --link-color:               #{$link-color};
    --link-hover-color:         #{$link-hover-color};

    --gutter:                   #{map-get($spacers, "gutter")};
    --gutter-xs:                #{map-get($spacers, "gutter-xs")};
    --gap:                      #{map-get($spacers, "gap")};
    --gap-xs:                   #{map-get($spacers, "gap-xs")};

    --line-height-header:       #{$line-height-header};
    --line-height-paragraph:    #{$line-height-paragraph};
}

//::placeholder {
//    color: $gray-600;
//}
//
//@include mq-min(desktop) {
//    ::-webkit-scrollbar-track {
//        background-color: $gray-200;
//    }
//
//    ::-webkit-scrollbar-thumb {
//        background-color: $gray-500;
//    }
//
//    ::-webkit-scrollbar {
//        @include box($scrollbar-w, $scrollbar-h);
//    }
//}

html {
    font-family: sans-serif;
    font-variant-ligatures: no-common-ligatures;
    -webkit-text-size-adjust: 100%;
    text-size-adjust: 100%;
    -webkit-touch-callout: none;
    /*scroll-behavior: smooth;*/
}

body {
    //background: $body-bg;
    //font-size: $body-size;
    //font-weight: 400;
    font-family: $body-font;
}

:is(input, textarea, button, main) {
    &:focus {
        outline: none;
    }
}

:is(a, area, button, [role='button'], input, label, select, summary, textarea) {
    touch-action: manipulation;
}

* > p:last-child {
    margin-bottom: 0;
}

:is(h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6) {

    a {
        display: block;
    }

    p {
        color: currentColor;
        line-height: inherit;
        margin-bottom: 0;
    }
}

a {
    display: inline-block;

    :where(h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6) {
        font-size: inherit;
        color: currentColor;
    }
}

img {
    display: inline-block;
    height: auto;
    max-height: 100%;
    max-width: 100%;
    width: auto;

    &:where(.aligncenter, .align-center) {
        display: block;
        margin-left: auto;
        margin-right: auto;
    }
}

:is([type="submit"], [type="reset"], [type="button"]) {
    cursor: pointer;
}

figure {
    &:where(.wp-caption, .caption) {
        max-width: 100% !important;
        display: block;

        img {
            display: inline-block;
        }

        &:where(.wp-caption-text, .caption-text) {
            padding-top: 10px;
            color: #454545;
        }

        &:where(.aligncenter, .align-center) {
            margin-bottom: 15px;
            margin-left: auto;
            margin-right: auto;
            text-align: center;
        }
    }
}

.screen-reader-text, .submenu-toggle-text, .hidden-text {
    @include hidden-text;
}

.clearfix {
    @include clearfix;
}

[data-glyph]::before {
    content: attr(data-glyph);
    font-family: $awesome-font;
}

[data-glyph-after]::after {
    content: attr(data-glyph-after);
    font-family: $awesome-font;
}

/** @todo responsive viewport */
.overlay {
    position: relative;

    .overlay-bg {
        @include absolute-full;
        background: transparent;
    }
}

.cover {
    display: block;
    overflow: hidden;
    position: relative;

    .cover-bg {
        @include absolute-full;
        background: transparent;
    }
}

.res {
    @include responsive-wrapper();

    &.auto {
        & > img {
            @include responsive-image-auto;
        }
    }

    &.scale {
        @include responsive-scale();
    }

    :where(iframe, embed, object, video) {
        @include absolute-full;
        border: 0;
        width: 100%;
        height: 100%;
    }
}

/** @todo aspect ratio */
:is(.ar-1, .ar-1-1) {
    @include responsive-ratio(1, 1);
}

.ar-3-2 {
    @include responsive-ratio(3, 2);
}

.ar-4-3 {
    @include responsive-ratio(4, 3);
}

.ar-16-9 {
    @include responsive-ratio(16, 9);
}

.ar-2-1 {
    @include responsive-ratio(2, 1);
}

.ar-3-1 {
    @include responsive-ratio(3, 1);
}

/** @todo display */
.hide {
    display: none !important;
}

.flex-row {
    flex-direction: row;
}

.flex-column {
    flex-direction: column;
}

/** @todo gallery */
[id^=gallery-] {
    $gap: 10;
    @include flex-x;
    @include gap($gap);

    & > .gallery-item {
        @include cell();

        a {
            @include responsive-wrapper();
            @include responsive-ratio(4, 3);
        }
    }

    @for $i from 1 through 9 {
        &.gallery-columns-#{$i} {
            & > .gallery-item {
                @include flex-self($i, 1, $gap);
            }
        }
    }
}

/** @todo keyframes */
@include keyframes(circle) {
    0% {
        opacity: 1;
    }
    40% {
        opacity: 1;
    }
    100% {
        width: 200%;
        height: 200%;
        opacity: 0;
    }
}

@include keyframes(fadeIn) {
    0% {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@include keyframes(ng-circle-anim) {
    0% {
        transform: rotate(0) scale(0.5) skew(1deg);
        opacity: 0.1;
    }
    30% {
        transform: rotate(0) scale(0.7) skew(1deg);
        opacity: 0.4;
    }
    100% {
        transform: rotate(0) scale(1) skew(1deg);
        opacity: 0.1;
    }
}

@include keyframes(ng-circle-fill-anim) {
    0% {
        transform: rotate(0) scale(0.7) skew(1deg);
        opacity: 0.2;
    }
    50% {
        transform: rotate(0) scale(1) skew(1deg);
        opacity: 0.2;
    }
    100% {
        transform: rotate(0) scale(0.7) skew(1deg);
        opacity: 0.2;
    }
}

@include keyframes(ng-circle-icon-anim) {
    0% {
        transform: rotate(0) scale(1) skew(1deg);
    }
    10% {
        transform: rotate(-25deg) scale(1) skew(1deg);
    }
    20% {
        transform: rotate(25deg) scale(1) skew(1deg);
    }
    30% {
        transform: rotate(-25deg) scale(1) skew(1deg);
    }
    40% {
        transform: rotate(25deg) scale(1) skew(1deg);
    }
    50% {
        transform: rotate(0) scale(1) skew(1deg);
    }
    100% {
        transform: rotate(0) scale(1) skew(1deg);
    }
}

/** @todo .toTop */
.toTop {
    @include box(32);
    font-size: fs(17);
    position: fixed;
    right: 10px;
    bottom: 5%;
    z-index: 9998;
    transition: all 0.3s ease-in-out;
    line-height: 32px;
    @include flex-center;
    background-color: rgb(255 255 255 / 80%);
    backdrop-filter: blur(5px);

    @include mq-max(tablet) {
        bottom: 10px;
    }

    &::before {
        font-weight: 300;
        @include box(30);
        @include flex-center;
        color: $black;
    }

    &::after {
        content: "";
        @include absolute-full;
        border: 1px solid #eee;
        outline: 1px solid #9a9a9a;
        background-color: transparentize($body-bg, 0.5);
    }

    & > #toTopHover {
        display: none;
    }

    &:hover, &:focus {
        color: $primary;

        &::after {
            outline: 1px solid $gray-600;
            background-color: transparentize($gray-300, 0.5);
        }
    }
}

/** ... */
ul.reset, ol.reset {
    @include list-reset();

    li {
        & > i, & > svg {
            margin-right: 8px;
        }
    }
}

.menu-fallback {
    display: flex;
    flex-wrap: wrap;
    align-items: center;

    a {
        @include hover_color($body-color, $body-color);
        @include underline($body-color);
    }
}

.dropdown.menu li {
    & > ul {
        display: none;

        &.js-dropdown-active {
            display: block;
        }
    }
}

.ajax-loading {
    position: relative;

    &::before {
        @include absolute-full;
        z-index: 9998;
        content: '';
        background-color: rgb(0 0 0 / 30%);
    }

    &::after {
        content: '';
        @include centering-self(30);
        z-index: 9999;
        border: 3px solid;
        border-color: $body-color #f3f3f3 $body-color #f3f3f3; // top right bottom left
        border-radius: 50%;
        animation: spin 2s linear infinite;
    }
}

@include keyframes(spin) {
    100% {
        transform: rotate(360deg);
    }
}

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

/* Firefox */
input[type=number] {
    -moz-appearance: textfield;
}